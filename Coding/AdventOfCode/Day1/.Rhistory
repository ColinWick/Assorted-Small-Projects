flight$row <- flight$X1 + flight$X2 + flight$X3 + flight$X4 + flight$X5 + flight$X6 + flight$X7
flight$row <- flight$X1 + flight$X2 + flight$X3 + flight$X4 + flight$X5 + flight$X6 + flight$X7
flight$column <- flight$X8 + flight$X9 + flight$X10
flight
hist(flight$row)
hist(flight$column)
flight$id <- flight$row * 8 + flight$column
max(flight$id)
hist(flight$id)
hist(flight$id,breaks = 20)
sort(flight$id)
sort(flight$id)[1]
for(i in c(1:805){
for(i in c(1:805){
for(i in c(1:805)){
k <- sort(flight$id)[i] - sort(flight$id)[i-1]
if(k != 1){
print(paste(i,i-1))
}
}
k <- 0
for(i in c(1:805)){
k <- sort(flight$id)[i] - sort(flight$id)[i-1]
if(k != 1){
print(paste(i,i-1))
}
}
k <- sort(flight$id)[i+1] - sort(flight$id)[i]
k <- 0
for(i in c(1:805)){
k <- sort(flight$id)[i+1] - sort(flight$id)[i]
if(k != 1){
print(paste(i,i-1))
}
}
sort(flight$id)
sort(flight$id)[k]
sort(flight$id)[i]
sort(flight$id)[566]
sort(flight$id)[565]
sort(flight$id)[567]
## Day 6
rm(list=ls())
pass <- unlist(str_split(readChar("../Day6/Day6.txt",nchars = 100000),pattern="\r\n\r\n"))
pass <- stringr::str_replace_all(pass,'\r',replacement = " ")
pass <- stringr::str_replace_all(pass,'\n',replacement = " ")
pass
pass <- stringr::str_replace_all(pass,' ',replacement = "")
pass
distinct(pass)
str_count(pass,pattern = letters)
str_count(pass,pattern = "letters")
str_count(pass,pattern = regex("[A-Za-z]"))
str_count(unique(pass,pattern = regex("[A-Za-z]")))
unique(pass[1,])
unique(pass[1,1])
unique(pass[1])
strsplit(x = pass)
strsplit(x = pass,fixed = TRUE)
strsplit(x = pass,fixed = TRUE,split = "")
unique(strsplit(x = pass,fixed = TRUE,split = ""))
unique(strsplit(x = pass,fixed = TRUE,split = ""))[1]
strsplit(x = pass,fixed = TRUE,split = "")
strsplit(x = pass,fixed = TRUE,split = "")[1]
strsplit(x = pass,fixed = TRUE,split = "")[1[1]]
strsplit(x = pass,fixed = TRUE,split = "")[1,
]
strsplit(x = pass,fixed = TRUE,split = "")[1][1]
gsub(x = pass)
gsub(x = pass,pattern = regex("[:alpha:]"),replacement = "")
gsub(x = pass,pattern = regex("[:A-Z:]"),replacement = "")
gsub(x = pass,pattern = regex("[A-Z]"),replacement = "")
gsub(x = pass,pattern = regex("[A-Z|a-z]"),replacement = "")
gsub(x = pass,pattern = regex("([[:alpha:]])\\1{2,}"),replacement = "\\1")
gsub(x = pass,pattern = regex("([[:alpha:]])\\1"),replacement = "\\1")
gsub(x = pass,pattern = regex("([[:alpha:]])\\1{1}"),replacement = "\\1")
gsub(x = pass,pattern = regex("([[:alpha:]])\\1{1,}"),replacement = "\\1")
gsub(x = pass,pattern = regex("([[alpha]])\\1{1,}"),replacement = "\\1")
:
gsub(x = pass,pattern = regex("([[:alpha:]])\\1{1,}"),replacement = "\\1")
gsub(x = pass,pattern = regex("([[:alpha:]])\\1+"),replacement = "\\1")
gsub(x = pass,pattern = regex("([[:alpha:]])\\1+"),replacement = "")
gsub(x = pass,pattern = regex("([[a-z]])\\1+"),replacement = "")
gsub(x = pass,pattern = regex("([a-z])\\1+"),replacement = "")
gsub(x = pass,pattern = regex("([:a-z:])\\1+"),replacement = "")
gsub(x = pass,pattern = regex("([:a-z:])\\1"),replacement = "")
gsub(x = pass,pattern = regex("([:a-z:])\\1."),replacement = "")
gsub(x = pass,pattern = regex("([:a-z:])\\[1}"),replacement = "")
gsub(x = pass,pattern = regex("([:a-z:])\\[1,}"),replacement = "")
gsub(x = pass,pattern = regex("([:a-z:])\\1[1,}"),replacement = "")
gsub(x = pass,pattern = regex("([:a-z:])\\1,"),replacement = "")
gsub(x = pass,pattern = regex("([:a-z:])\\1"),replacement = "")
pass[1,]
pass[1]
unique(str_split(pass[1],pattern = ""))
unique(unlist(str_split(pass[1],pattern = "")))
unique(unlist(str_split(pass,pattern = "")))
unique(unlist(str_split(pass,pattern = "")))
length(unique(unlist(str_split(pass[i],pattern = ""))))
i <- 1
length(unique(unlist(str_split(pass[i],pattern = ""))))
for(i in c(1:454)){
pass$unq <- length(unique(unlist(str_split(pass[i],pattern = ""))))
}
pass
length(unique(unlist(str_split(pass[i],pattern = ""))))
## Day 6
rm(list=ls())
pass <- unlist(str_split(readChar("../Day6/Day6.txt",nchars = 100000),pattern="\r\n\r\n"))
pass <- stringr::str_replace_all(pass,'\r',replacement = " ")
pass <- stringr::str_replace_all(pass,'\n',replacement = " ")
pass <- stringr::str_replace_all(pass,' ',replacement = "")
pass
i <- 1
length(unique(unlist(str_split(pass[i],pattern = ""))))
k < -length(unique(unlist(str_split(pass[i],pattern = ""))))
k <- length(unique(unlist(str_split(pass[i],pattern = ""))))
for(i in c(1:454)){
k <- length(unique(unlist(str_split(pass[i],pattern = ""))))
pass$unq[i]
}
for(i in c(1:454)){
k <- length(unique(unlist(str_split(pass[i],pattern = ""))))
pass$unq[i] <- k
}
pass$unq
pass
pass$unq <- 0
pass <- unlist(str_split(readChar("../Day6/Day6.txt",nchars = 100000),pattern="\r\n\r\n"))
pass <- stringr::str_replace_all(pass,'\r',replacement = " ")
pass <- stringr::str_replace_all(pass,'\n',replacement = " ")
pass <- stringr::str_replace_all(pass,' ',replacement = "")
data.frame(pass)
pass <- data.frame(pass)
i <- 1
k <- length(unique(unlist(str_split(pass[i],pattern = ""))))
pass$unq <- 0
k <- length(unique(unlist(str_split(pass[i,1],pattern = ""))))
pass$unq <- 0
for(i in c(1:454)){
k <- length(unique(unlist(str_split(pass[i],pattern = ""))))
pass$unq[i] <- k
}
pass[i,2] <- k
k <- length(unique(unlist(str_split(pass[i],pattern = ""))))
pass <- unlist(str_split(readChar("../Day6/Day6.txt",nchars = 100000),pattern="\r\n\r\n"))
pass <- stringr::str_replace_all(pass,'\r',replacement = " ")
pass <- stringr::str_replace_all(pass,'\n',replacement = " ")
pass <- stringr::str_replace_all(pass,' ',replacement = "")
pass <- data.frame(pass)
i <- 1
pass$unq <- 0
for(i in c(1:454)){
k <- length(unique(unlist(str_split(pass[i,1],pattern = ""))))
pass[i,2] <- k
}
pass
sum(pass$unq)
pass <- unlist(str_split(readChar("../Day6/Day6.txt",nchars = 100000),pattern="\r\n\r\n"))
pass
transform(pass,split="\\r")
transform(pass,split="\r")
transform(pass,split="\r\n")
transform(pass,split="\\r\n")
str_split(pass,pattern = "\r\n")
matrix(str_split(pass,"\\r\n"))
matrix(str_split(pass,"\r\n"))
str_split(pass,"\r\n")
unlist(str_split(pass,"\r\n"))
data.frame(unlist(str_split(pass,"\r\n")))
matrix(unlist(str_split(pass,"\r\n")))
matrix(str_split(pass,"\r\n"))
str_split(pass,"\r\n")
str_split(pass,"\r\n")[1]
as.vector(str_split(pass,"\r\n")[1])
str_split(pass,"\r\n")[1]
str_split(pass,"\r\n")[2]
str_split(pass,"\r\n")[3]
separate(pass,"\r\n")[3]
separate(pass,"\r\n")[3])
separate(pass,"\r\n")
separate(pass,c(1:15),"\r\n",)
separate(data.frame(pass,c(1:15),"\r\n",))
separate(data.frame(pass),c(1:15),"\r\n",)
separate(data.frame(pass),c(1:15),sep="\r\n",)
separate(data.frame(pass),c("1:15"),sep="\r\n",)
separate(data = data.frame(pass),sep="\r\n",)
separate(data = data.frame(pass),sep="\r\n",col = 10)
separate(data = data.frame(pass),sep="\r\n",col = 1)
separate(data = data.frame(pass),sep="\r\n",col = 1,into = c(as.character(c(1:10))))
pass2 <- separate(data = data.frame(pass),sep="\r\n",col = 1,into = c(as.character(c(1:10))))
pass2$10
pass2$`10`
summary(pass2)
favstats(pass2)
head(pass2)
levels.default(pass)
factor(pass)
str(pass)
str(pass2)
pass2 <- separate(data = data.frame(pass),sep="\r\n",col = 1,into = c(as.character(c(1:4))))
str(pass2)
paste(pass2[,c(1:4)])
pass2$all <- paste(pass2[,c(1:4)])
pass2$all
pass2$all <- paste(pass2[c(1:4)])
pass
pass2$all <- str_replace_all(pass,"\r\n",replacement = "")
pass
pass2
pass2$all <- unique(unlist(str_split(str_replace_all(pass,"\r\n",replacement = ""),pattern = "")))
unique(unlist(str_split(str_replace_all(pass,"\r\n",replacement = ""),pattern = "")))
unique(unlist(str_split(str_replace_all(pass[i],"\r\n",replacement = ""),pattern = "")))
paste(unique(unlist(str_split(str_replace_all(pass[i],"\r\n",replacement = ""),pattern = ""))),sep = "")
for(i in c(1:454)){
pass2[i,5] <- paste(unique(unlist(str_split(str_replace_all(pass[i],"\r\n",replacement = ""),pattern = ""))),sep = "")
}
paste(unique(unlist(str_split(str_replace_all(pass[i],"\r\n",replacement = ""),pattern = ""))),sep = "")
paste(str_remove_all(unique(unlist(str_split(str_replace_all(pass[i],"\r\n",replacement = ""),pattern = "")))pattern = "\""),sep = "")
paste(str_remove_all(unique(unlist(str_split(str_replace_all(pass[i],"\r\n",replacement = ""),pattern = ""))),pattern = "\""),sep = "")
for(i in c(1:454)){
pass2[i,5] <- paste(str_remove_all(unique(unlist(str_split(str_replace_all(pass[i],"\r\n",replacement = ""),pattern = ""))),pattern = "\""),sep = "")
}
var <- unique(unlist(str_split(str_replace_all(pass[i],"\r\n",replacement = ""),pattern = "")))
var <- paste(unique(unlist(str_split(str_replace_all(pass[i],"\r\n",replacement = ""),pattern = ""))))
var <- paste(unique(unlist(str_split(str_replace_all(pass[i],"\r\n",replacement = ""),pattern = ""))),collapse = "")
pass2[i,5] <- paste(unique(unlist(str_split(str_replace_all(pass[i],"\r\n",replacement = ""),pattern = ""))),collapse = "")
for(i in c(1:454)){
pass2[i,5] <- paste(unique(unlist(str_split(str_replace_all(pass[i],"\r\n",replacement = ""),pattern = ""))),collapse = "")
}
pass2
pass2$`1`
pass2$`1`[1]
unique(pass2$`1`[1])
str_split(pass2$all)
str_split(pass2$all,pattern = "")
str_split(pass2$all[1],pattern = "")
intersect(pass2$`1`,pass2$`2`)
intersect(str_split(pass2$`2`,pattern = ""),str_split(pass2$`2`,pattern = "")
)
intersect(str_split(pass2$`1`[1],pattern = ""),str_split(pass2$`2`[1],pattern = ""))
intersect(str_split(pass2$`1`,pattern = ""),str_split(pass2$`2`,pattern = ""))
intersect(str_split(pass2$`1`,pattern = ""),str_split(pass2$`2`,pattern = ""),str_split(pass2$`3`,pattern = ""),str_split(pass2$`4`,pattern = ""),str_split(pass2$all,pattern = ""))
intersect(str_split(pass2$`1`,pattern = ""),str_split(pass2$`2`,pattern = ""))
list1 <- intersect(str_split(pass2$`1`,pattern = ""),str_split(pass2$`2`,pattern = ""))
list1
list1 <- intersect(str_split(pass2$`1`[1],pattern = ""),str_split(pass2$`2`[1],pattern = ""))
list1
pass2
str_split(pass2$`1`)
str_split(pass2$`1`,pattern = "")
str_split(pass2$`1`[i],pattern = "")
str_split(pass2$`1`[1],pattern = "")
unlist(str_split(pass2$`1`[1],pattern = ""))
list1 <- unlist(str_split(pass2$`1`[1],pattern = ""))
list1 <- unlist(str_split(pass2$`1`[1],pattern = ""))
list2 <- unlist(str_split(pass2$`2`[1],pattern = ""))
list3 <- unlist(str_split(pass2$`3`[1],pattern = ""))
list4 <- unlist(str_split(pass2$`4`[1],pattern = ""))
intersect(list1,list2,list3)
intersect(list1,list2)
intersect(intersect(intersect(list1,list2),list3,),list4)
intersect(intersect(intersect(list1,list2),list3),list4)
str(pass2)
paste(intersect(intersect(intersect(list1,list2),list3),list4),sep = "")
k <- paste(intersect(intersect(intersect(list1,list2),list3),list4),sep = "")
k <- paste(intersect(intersect(intersect(list1,list2),list3),list4),collapse = "")
for(i in c(1:454)){
list1 <- unlist(str_split(pass2$`1`[i],pattern = ""))
list2 <- unlist(str_split(pass2$`2`[i],pattern = ""))
list3 <- unlist(str_split(pass2$`3`[i],pattern = ""))
list4 <- unlist(str_split(pass2$`4`[i],pattern = ""))
k <- paste(intersect(intersect(intersect(list1,list2),list3),list4),collapse = "")
pass2[i,5] <- k
pass2[i,6] <- length(k)
}
pass2
intersect(list1,list2)
list1 <- unlist(str_split(pass2$`1`[i],pattern = ""))
list2 <- unlist(str_split(pass2$`2`[i],pattern = ""))
list3 <- unlist(str_split(pass2$`3`[i],pattern = ""))
list4 <- unlist(str_split(pass2$`4`[i],pattern = ""))
list1 <- unlist(str_split(pass2$`1`[i],pattern = ""))
pass2
if(!is.na(pass2$`1`[i])){
print("hello")
}
if(!is.na(pass2$`1`[i])){
print("hello")
} else {
print("lol")
}
if(!is.na(pass2$`4`[i])){
print("hello")
} else {
print("lol")
}
if(is.na(pass2$`4`[i])){
print("hello")
} else {
print("lol")
}
if(is.na(pass2$`4`[166])){
print("hello")
} else {
print("lol")
}
if(!is.na(pass2$`4`[166])){
print("hello")
} else {
print("lol")
}
mylist <- intersect(list4,list1)
mylist <- intersect(list3,mylist)
mylist <- intersect(list2,mylist)
i <- 1
mylist <- intersect(list4,list1)
mylist <- intersect(list3,mylist)
mylist <- intersect(list2,mylist)
pass2[1,]
list1 <- unlist(str_split(pass2$`1`[i],pattern = ""))
list2 <- unlist(str_split(pass2$`2`[i],pattern = ""))
list3 <- unlist(str_split(pass2$`3`[i],pattern = ""))
list4 <- unlist(str_split(pass2$`4`[i],pattern = ""))
mylist <- intersect(list4,list1)
mylist <- intersect(list3,mylist)
mylist <- intersect(list2,mylist)
mylist <- intersect(list4,list1)
mylist <- intersect(list3,mylist)
mylist <- intersect(list2,mylist)
for(i in c(1:454)){
list1 <- unlist(str_split(pass2$`1`[i],pattern = ""))
list2 <- unlist(str_split(pass2$`2`[i],pattern = ""))
list3 <- unlist(str_split(pass2$`3`[i],pattern = ""))
list4 <- unlist(str_split(pass2$`4`[i],pattern = ""))
if(!is.na(list4) & !is.na(list3)){
mylist <- intersect(list4,list1)
mylist <- intersect(list3,mylist)
mylist <- intersect(list2,mylist)
pass2[i,6] <- paste(mylist,collapse = "")
} else if(!is.na(list3)){
mylist <- intersect(list3,list1)
mylist <- intersect(list2,mylist)
pass2[i,6] <- paste(mylist,collapse = "")
} else {
mylist <- intersect(list2,list1)
pass2[i,6] <- paste(mylist,collapse = "")
}
}
pass2
pass2$ans <- length(pass2$V6)
pass2$ans
length(mylist)
for(i in c(1:454)){
list1 <- unlist(str_split(pass2$`1`[i],pattern = ""))
list2 <- unlist(str_split(pass2$`2`[i],pattern = ""))
list3 <- unlist(str_split(pass2$`3`[i],pattern = ""))
list4 <- unlist(str_split(pass2$`4`[i],pattern = ""))
if(!is.na(list4) & !is.na(list3)){
mylist <- intersect(list4,list1)
mylist <- intersect(list3,mylist)
mylist <- intersect(list2,mylist)
pass2[i,6] <- paste(mylist,collapse = "")
pass2[i,7] <- length(mylist)
} else if(!is.na(list3)){
mylist <- intersect(list3,list1)
mylist <- intersect(list2,mylist)
pass2[i,6] <- paste(mylist,collapse = "")
pass2[i,7] <- length(mylist)
} else {
mylist <- intersect(list2,list1)
pass2[i,6] <- paste(mylist,collapse = "")
pass2[i,7] <- length(mylist)
}
}
length(mylist)
pass2
sum(pass2$ans)
for(i in c(1:454)){
list1 <- unlist(str_split(pass2$`1`[i],pattern = ""))
list2 <- unlist(str_split(pass2$`2`[i],pattern = ""))
list3 <- unlist(str_split(pass2$`3`[i],pattern = ""))
list4 <- unlist(str_split(pass2$`4`[i],pattern = ""))
if(!is.na(list4) & !is.na(list3) & !is.na(list2)){
mylist <- intersect(list4,list1)
mylist <- intersect(list3,mylist)
mylist <- intersect(list2,mylist)
pass2[i,6] <- paste(mylist,collapse = "")
pass2[i,7] <- length(mylist)
} else if(!is.na(list3) & !is.na(list2)){
mylist <- intersect(list3,list1)
mylist <- intersect(list2,mylist)
pass2[i,6] <- paste(mylist,collapse = "")
pass2[i,7] <- length(mylist)
} else if(!is.na(list2)) {
mylist <- intersect(list2,list1)
pass2[i,6] <- paste(mylist,collapse = "")
pass2[i,7] <- length(mylist)
} else {
mylist <- list1
pass2[i,6] <- paste(mylist,collapse = "")
pass2[i,7] <- length(mylist)
}
}
sum(pass2$ans)
pass2
pass2 <- separate(data = data.frame(pass),sep="\r\n",col = 1,into = c(as.character(c(1:4))))
str(pass2)
str(pass2)
pass2
pass2 <- separate(data = data.frame(pass),sep="\r\n",into = c(as.character(c(1:4))))
pass2 <- separate(data = data.frame(pass),sep="\r\n",col = 1,into = c(as.character(c(1:4))))
str(pass2)
for(i in c(1:454)){
list1 <- unlist(str_split(pass2$`1`[i],pattern = ""))
list2 <- unlist(str_split(pass2$`2`[i],pattern = ""))
list3 <- unlist(str_split(pass2$`3`[i],pattern = ""))
list4 <- unlist(str_split(pass2$`4`[i],pattern = ""))
if(!is.na(list4) & !is.na(list3) & !is.na(list2)){
mylist <- intersect(list4,list1)
mylist <- intersect(list3,mylist)
mylist <- intersect(list2,mylist)
pass2[i,6] <- paste(mylist,collapse = "")
pass2[i,7] <- length(mylist)
} else if(!is.na(list3) & !is.na(list2)){
mylist <- intersect(list3,list1)
mylist <- intersect(list2,mylist)
pass2[i,6] <- paste(mylist,collapse = "")
pass2[i,7] <- length(mylist)
} else if(!is.na(list2)) {
mylist <- intersect(list2,list1)
pass2[i,6] <- paste(mylist,collapse = "")
pass2[i,7] <- length(mylist)
} else {
mylist <- list1
pass2[i,6] <- paste(mylist,collapse = "")
pass2[i,7] <- length(mylist)
}
}
sum(pass2$ans)
pass2
for(i in c(1:454)){
list1 <- unlist(str_split(pass2$`1`[i],pattern = ""))
list2 <- unlist(str_split(pass2$`2`[i],pattern = ""))
list3 <- unlist(str_split(pass2$`3`[i],pattern = ""))
list4 <- unlist(str_split(pass2$`4`[i],pattern = ""))
if(!is.na(list4) & !is.na(list3) & !is.na(list2)){
mylist <- intersect(list4,list1)
mylist <- intersect(list3,mylist)
mylist <- intersect(list2,mylist)
pass2[i,5] <- paste(mylist,collapse = "")
pass2[i,6] <- length(mylist)
} else if(!is.na(list3) & !is.na(list2)){
mylist <- intersect(list3,list1)
mylist <- intersect(list2,mylist)
pass2[i,5] <- paste(mylist,collapse = "")
pass2[i,6] <- length(mylist)
} else if(!is.na(list2)) {
mylist <- intersect(list2,list1)
pass2[i,5] <- paste(mylist,collapse = "")
pass2[i,6] <- length(mylist)
} else {
mylist <- list1
pass2[i,5] <- paste(mylist,collapse = "")
pass2[i,6] <- length(mylist)
}
}
pass2 <- separate(data = data.frame(pass),sep="\r\n",col = 1,into = c(as.character(c(1:4))))
str(pass2)
for(i in c(1:454)){
list1 <- unlist(str_split(pass2$`1`[i],pattern = ""))
list2 <- unlist(str_split(pass2$`2`[i],pattern = ""))
list3 <- unlist(str_split(pass2$`3`[i],pattern = ""))
list4 <- unlist(str_split(pass2$`4`[i],pattern = ""))
if(!is.na(list4) & !is.na(list3) & !is.na(list2)){
mylist <- intersect(list4,list1)
mylist <- intersect(list3,mylist)
mylist <- intersect(list2,mylist)
pass2[i,5] <- paste(mylist,collapse = "")
pass2[i,6] <- length(mylist)
} else if(!is.na(list3) & !is.na(list2)){
mylist <- intersect(list3,list1)
mylist <- intersect(list2,mylist)
pass2[i,5] <- paste(mylist,collapse = "")
pass2[i,6] <- length(mylist)
} else if(!is.na(list2)) {
mylist <- intersect(list2,list1)
pass2[i,5] <- paste(mylist,collapse = "")
pass2[i,6] <- length(mylist)
} else {
mylist <- list1
pass2[i,5] <- paste(mylist,collapse = "")
pass2[i,6] <- length(mylist)
}
}
sum(pass2$ans)
pass2
sum(pass2$V6`)
``
sum(pass2$V6)
pass2
## Day 7
read_lines(file = "../Day7/bags.txt")
## Day 7
bags <- read_lines(file = "../Day7/bags.txt")
## Day 7
rm(list=ls())
bags <- read_lines(file = "../Day7/bags.txt")
separate(bags,into = c("container","inside"))
separate(bags,into = c("container","inside"),sep = " contain ")
separate(data.frame(bags),into = c("container","inside"),sep = " contain ")
separate(data.frame(bags),into = c("container","inside"),sep = " contain ",col=1)
